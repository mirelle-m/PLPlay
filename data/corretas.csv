M1_Q11,1,Qual linguagem foi fortemente inspirada em Algol e se tornou a principal para ensino de programacao por sua simplicidade e suporte a programacao estruturada?,a,Pascal,C,Simula,Fortran,Lisp
M2_Q14,2,Qual das linguagens a seguir e um exemplo de LP interpretada?,a,Java.,C.,Fortran.,Pascal.,Assembly.
M3_Q3,3,Qual o principal objetivo dos 'Sistemas de Tipos' em LPs?,a,Determinar a qual tipo os valores e expressoes pertencem em tempo de execucao.,Aumentar a complexidade do codigo.,Diminuir a expressividade da linguagem.,Acelerar a traducao de codigo para linguagem de maquina.,Permitir o uso de polimorfismo ad-hoc.
M3_Q7,3,O que e polimorfismo?,a,Abstracoes que operam de maneira uniforme sobre valores de tipos diferentes.,Entidades que so podem ter um tipo especifico.,Linguagens que nao tem verificacao de tipos.,Programas que nao sao compilaveis.,Valores de segunda classe.
M5_Q1,5,Em um sistema de tipagem forte e estático como o de Java, por que o polimorfismo de inclusão (relacionado à herança) é crucial para a reusabilidade de código?,c,Porque ele permite a verificação de tipos apenas em tempo de execução.,Porque ele torna a linguagem mais fracamente tipada.,Porque permite que um tipo possa ser substituído por um subtipo sem comprometer a segurança de tipo.,Porque ele é um tipo de polimorfismo ad-hoc.,Porque ele ignora a verificação de tipos.
M4_Q5,4,O que é uma 'variável de heap'?,a,Uma variável criada ou inicializada em tempo de execução, com alocação dinâmica de memória.,Uma variável que é sempre declarada e inicializada no início da execução.,Uma variável que só armazena tipos primitivos.,Uma variável com alocação estática.,Uma variável que não pode ser desalocada.
M4_Q14,4,Qual das opções não é um tipo de comando fundamental listado no documento?,a,Atribuições recursivas.,Atribuições.,Chamadas de Procedimento.,Comandos sequenciais.,Comandos iterativos.
M4_Q11,4,No 'escopo léxico', o que determina a definição do escopo?,a,A estrutura 'textual' do programa.,A ordem de execução das rotinas.,O tipo de dado da variável.,A quantidade de memória disponível.,O número de chamadas de funções.
M4_Q2,4,O que é uma variável na programação imperativa, de acordo com o documento?,a,Uma entidade que contém um valor que pode ser avaliado e alterado.,Uma entidade que só pode ser lida.,Uma constante que nunca muda de valor.,Uma função que retorna um valor.,Uma entidade que só existe em tempo de compilação.
M6_Q3,6,Qual o papel da 'imutabilidade' no paradigma funcional?,a,Variáveis e estruturas de dados não podem ser alteradas após a criação, o que previne efeitos colaterais.,Torna o código mais difícil de entender.,Aumenta a complexidade do gerenciamento de memória.,Apenas tipos primitivos são imutáveis.,Não é um conceito importante no paradigma.
M6_Q17,6,O que é um 'fechamento' (closure)?,a,Uma função que 'captura' variáveis de seu escopo circundante, mesmo que o escopo não exista mais.,Um bloco de código que nunca pode ser executado.,Uma função que só tem argumentos.,Um tipo de dado imutável.,Uma estrutura de controle de loop.
M1_Q18,1,Qual das seguintes caracteristicas de uma LP esta relacionada a execucao em um tempo aceitavel para os propositos de uso da linguagem?,a,Eficiencia,Simplicidade,Universalidade,Expressividade,Implementavel
M1_Q11,1,Qual linguagem foi fortemente inspirada em Algol e se tornou a principal para ensino de programacao por sua simplicidade e suporte a programacao estruturada?,a,Pascal,C,Simula,Fortran,Lisp
M4_Q11,4,No 'escopo léxico', o que determina a definição do escopo?,a,A estrutura 'textual' do programa.,A ordem de execução das rotinas.,O tipo de dado da variável.,A quantidade de memória disponível.,O número de chamadas de funções.
M5_Q7,5,Considere a linguagem C (Missão 1) com seu sistema de tipo estático (Missão 3). Qual a principal diferença em como ela lida com 'referências soltas' (Missão 4) em comparação com linguagens com gerenciamento automático de memória?,a,C exige gerenciamento manual de memória, o que aumenta a probabilidade de 'dangling references' se a memória de heap for desalocada incorretamente.,C é uma linguagem de alto nível que previne 'dangling references'.,Em C 'dangling references' não são um problema.,C não tem ponteiros.,Em C as 'dangling references' são detectadas em tempo de compilação.
M7_Q10,7,Como a 'imutabilidade' ajuda a evitar 'referências soltas' (dangling references) em linguagens funcionais?,a,A imutabilidade não tem relação com referências soltas.,A imutabilidade causa referências soltas.,Como os dados não são alterados, não há a necessidade de desalocação dinâmica, eliminando a fonte do problema.,A imutabilidade é um tipo de escopo dinâmico.,A imutabilidade só existe em linguagens com gerenciamento manual de memória.
M9_Q5,9,Qual é a diferença na abordagem para resolver um problema entre o 'paradigma imperativo' (Missão 4) e o 'paradigma lógico' (Missão 8)?,a,O imperativo foca em uma sequência de comandos, o lógico em fatos e regras.,O imperativo usa recursão e o lógico não.,O imperativo é um paradigma declarativo.,O lógico usa variáveis mutáveis, o imperativo não.,Não há diferença significativa.
M9_Q14,9,Qual a relação entre os conceitos de 'comandos' (Missão 4) e 'regras de inferência' (Missão 8)?,a,Comandos e regras são a mesma coisa.,Comandos são usados para descrever o que fazer, regras para como fazer.,Comandos alteram o estado do programa, enquanto regras são usadas para deduzir novos fatos sem alterar o estado.,Regras são usados para a sintaxe, comandos para a semântica.,Comandos só existem em linguagens lógicas.
