id_questao;missao;pergunta;alternativa_certa;texto_alternativa_a;texto_alternativa_b;texto_alternativa_c;texto_alternativa_d;texto_alternativa_e;texto_alternativa_certa
"M1_Q01";1;"De acordo com o material qual e o nome completo do professor responsavel pela disciplina?";"b";"Everton L. G. Ribeiro.";"Everton L. G. Alves.";"Everton G. Alves.";"Everton L. Alves.";"Everton de G. Alves.";"Everton L. G. Alves."
"M1_Q02";1;"Em que universidade o professor Everton L. G. Alves obteve sua graduacao mestrado e doutorado?";"c";"Universidade de Sao Paulo (USP).";"University of Texas in Austin.";"Universidade Federal de Campina Grande (UFCG).";"Universidade Estadual da Paraiba (UEPB).";"Massachusetts Institute of Technology (MIT).";"Universidade Federal de Campina Grande (UFCG)."
"M1_Q03";1;"Segundo a definicao apresentada no material o que e um "paradigma"?";"d";"Uma tecnica de programacao avancada.";"Um tipo de linguagem de programacao.";"Um metodo de avaliacao de software.";"Um modelo ou padrao a ser seguido.";"Um conjunto de regras gramaticais de uma linguagem.";"Um modelo ou padrao a ser seguido."
"M1_Q04";1;"Qual e o nome completo da disciplina apresentada?";"c";"Principios de Linguagens de Programacao.";"Programacao de Linguagens Puras.";"Paradigmas de Linguagens de Programacao.";"Programacao Logica e Funcional.";"Plataformas de Linguagens de Programacao.";"Paradigmas de Linguagens de Programacao."
"M1_Q05";1;"Na analogia dos macacos o que acontecia toda vez que um macaco tentava subir na escada?";"a";"Jorrava agua gelada sobre os demais macacos.";"Ele era premiado com bananas.";"Ele era isolado dos outros macacos.";"A gaiola era aberta.";"Os cientistas removiam a escada.";"Jorrava agua gelada sobre os demais macacos."
"M1_Q06";1;"No experimento dos macacos o que a comunidade de macacos passou a fazer para evitar o castigo?";"b";"Eles trabalharam em equipe para pegar as bananas.";"Eles espancavam qualquer macaco que tentasse subir na escada.";"Eles se esconderam do dispositivo de agua.";"Eles sabotaram a escada.";"Eles criaram uma nova escada.";"Eles espancavam qualquer macaco que tentasse subir na escada."
"M1_Q07";1;"Qual o principal objetivo da disciplina conforme o material?";"e";"Aprender a programar em Haskell.";"Dominar apenas os paradigmas Python e Java.";"Criar projetos de software complexos.";"Analisar a historia das linguagens de programacao.";"Estudar os principais conceitos e paradigmas que dao origem a diferentes estilos de programacao.";"Estudar os principais conceitos e paradigmas que dao origem a diferentes estilos de programacao."
"M1_Q08";1;"O que o "Paradigma Cartesiano" se baseia?";"a";"Na visao mecanicista do conhecimento dividindo o todo em partes.";"No uso de linguagens de programacao declarativas.";"Na uniao de todas as partes para entender o todo.";"Na visao puramente funcional da programacao.";"No artigo 461 da CLT.";"Na visao mecanicista do conhecimento dividindo o todo em partes."
"M1_Q09";1;"Qual e a principal funcao dos paradigmas de linguagens de programacao?";"b";"Definir a sintaxe de uma linguagem.";"Guiar o design das linguagens de programacao.";"Determinar a velocidade de execucao do codigo.";"Avaliar o desempenho de um programador.";"Organizar a equipe de desenvolvimento.";"Guiar o design das linguagens de programacao."
"M1_Q10";1;"De acordo com o material por que e importante estudar paradigmas de linguagens de programacao?";"d";"Porque todas as linguagens de programacao seguem o mesmo paradigma.";"Para focar apenas em linguagens populares como Python e Java.";"Para provar que ja se sabe programar.";"Para aumentar o arsenal de ferramentas para resolver problemas e atender as exigencias do mercado.";"Porque o mercado tem exigido que os desenvolvedores dominem apenas um paradigma.";"Para aumentar o arsenal de ferramentas para resolver problemas e atender as exigencias do mercado."
"M1_Q11";1;"Qual dos seguintes paradigmas nao e mencionado no slide "Paradigmas" do material?";"a";"Programacao Estruturada.";"Funcional.";"Logico.";"Concorrente.";"Imperativo.";"Programacao Estruturada."
"M1_Q12";1;"O que o material sugere para uma boa performance na disciplina?";"c";"Estudar apenas na vespera das provas.";"Faltar as aulas para ter mais tempo de estudo.";"Procurar nao faltar e ter estudo continuo.";"Fazer todos os exercicios sem afinco.";"Confiar apenas no conhecimento do colega.";"Procurar nao faltar e ter estudo continuo."
"M1_Q13";1;"Em Haskell o que significa a caracteristica de "non-strict semantics"?";"d";"A linguagem e fracamente tipada.";"A sintaxe e baseada em prototipos.";"As funcoes podem ter efeitos colaterais.";"A avaliacao e preguicosa (lazy evaluation).";"A linguagem nao possui classes de tipos.";"A avaliacao e preguicosa (lazy evaluation)."
"M1_Q14";1;"Qual das seguintes linguagens e mencionada como seguindo primariamente os paradigmas orientados a objetos e imperativo mas tambem com aspectos de programacao funcional?";"a";"Python.";"Haskell.";"JavaScript.";"C.";"Java.";"Python."
"M1_Q15";1;"Qual e a metodologia de ensino da disciplina?";"e";"Apenas exercicios teoricos.";"Apenas aulas praticas.";"Fazer uma prova unica no final do semestre.";"Um projeto individual sem orientacao.";"Aulas expositivas exercicios praticos (quizzes e praticas) e um projeto.";"Aulas expositivas exercicios praticos (quizzes e praticas) e um projeto."
"M1_Q16";1;"No contexto da disciplina o projeto deve ser desenvolvido em quantas etapas de entrega e em quais paradigmas?";"c";"Uma unica etapa no paradigma imperativo.";"Duas etapas no paradigma funcional e orientada a objetos.";"Duas etapas nos paradigmas funcional e logico.";"Tres etapas nos paradigmas imperativo funcional e logico.";"Uma unica etapa no paradigma logico.";"Duas etapas nos paradigmas funcional e logico."
"M1_Q17";1;"De acordo com o material quantos alunos devem compor cada grupo para o projeto?";"b";"2 pessoas.";"4 pessoas.";"5 pessoas.";"3 pessoas.";"6 pessoas.";"4 pessoas."
"M1_Q18";1;"Qual a porcentagem da nota 1 que corresponde a mini-prova?";"a";"80%.";"20%.";"50%.";"35%.";"15%.";"80%."
"M1_Q19";1;"O que e a "Avaliacao Preguicosa" (lazy evaluation) caracteristica do Haskell?";"a";"Uma forma de a linguagem ignorar erros de recursao.";"Um recurso que forca a execucao de todas as chamadas de uma vez.";"Um mecanismo que garante que a funcao retorne um valor inteiro.";"Um recurso que permite a linguagem trabalhar com listas infinitas avaliando apenas o necessario.";"Uma caracteristica que permite a criacao de variaveis mutaveis.";"Um recurso que permite a linguagem trabalhar com listas infinitas avaliando apenas o necessario."
"M1_Q20";1;"Qual a diferenca entre os tipos `Int` e `Integer` em Haskell segundo o material?";"d";"`Int` e usado para numeros de ponto flutuante e `Integer` para inteiros.";"`Integer` e um tipo de dados mais antigo e obsoleto.";"`Int` e para inteiros de precisao fixa enquanto `Integer` e para inteiros de precisao arbitraria.";"Essa informacao nao e abordada no material fornecido.";"Nao ha diferenca entre os dois tipos.";"Essa informacao nao e abordada no material fornecido."
"M2_Q01";2;"De acordo com o material qual e a principal caracteristica da programacao funcional que a distingue da imperativa?";"c";"O uso de variaveis mutaveis.";"A modificacao do estado de variaveis.";"A ausencia de mudanca de estado baseada em funcoes matematicas.";"O uso de lacos de repeticao.";"A sintaxe similar a linguagens como C e Java.";"A ausencia de mudanca de estado baseada em funcoes matematicas."
"M2_Q02";2;"Em Haskell o que representa a notacao `(a:as)` em um casamento de padroes para listas?";"b";"`a` e o ultimo elemento e `as` e o restante da lista.";"`a` e a cabeca (primeiro elemento) e `as` e a cauda (corpo) da lista.";"`a` e a lista completa e `as` e um elemento da lista.";"`a` e um contador e `as` e o resultado final.";"`a` e `as` sao listas separadas.";"`a` e a cabeca (primeiro elemento) e `as` e a cauda (corpo) da lista."
"M2_Q03";2;"Qual e o nome da funcao em Haskell que retorna o primeiro elemento de uma lista?";"d";"`tail`.";"`last`.";"`drop`.";"`head`.";"`length`.";"`head`."
"M2_Q04";2;"O que a expressao `[1 3..7]` em Haskell resulta?";"a";"Uma lista com os numeros [1 3 5 7].";"Uma lista com os numeros [1 2 3 4 5 6 7].";"Um erro de sintaxe.";"Uma lista vazia.";"O numero 7.";"Uma lista com os numeros [1 3 5 7]."
"M2_Q05";2;"Em Haskell por que a clausula `else` e obrigatoria em uma expressao `if-then-else`?";"b";"Porque a sintaxe da linguagem exige uma estrutura completa.";"Porque o `if` em Haskell e uma expressao que deve retornar um valor em qualquer caso.";"Para evitar erros de compilacao.";"Apenas por uma questao de boa pratica de programacao.";"Nao e obrigatoria a clausula `else` pode ser omitida.";"Porque o `if` em Haskell e uma expressao que deve retornar um valor em qualquer caso."
"M2_Q06";2;"O que sao as clausulas `where` de acordo com o material?";"e";"Condicoes para que a funcao seja executada.";"Um tipo de `if-then-else` simplificado.";"Variaveis globais que podem ser modificadas.";"Comandos de atribuicao.";"Estruturas para definir valores ou funcoes locais evitando repeticao de codigo.";"Estruturas para definir valores ou funcoes locais evitando repeticao de codigo."
"M2_Q07";2;"Qual das seguintes opcoes descreve a caracteristica de "avaliacao preguicosa" (lazy evaluation) do Haskell?";"d";"A linguagem avalia todas as expressoes imediatamente.";"A linguagem ignora erros de recursao.";"O compilador otimiza o codigo antes da execucao.";"A linguagem avalia as expressoes apenas quando seus resultados sao necessarios permitindo listas infinitas.";"A linguagem forca o programador a definir todos os tipos explicitamente.";"A linguagem avalia as expressoes apenas quando seus resultados sao necessarios permitindo listas infinitas."
"M2_Q08";2;"O que e um "casamento de padroes" (pattern matching) em Haskell?";"a";"Um metodo de ordenacao de dados em uma lista.";"Uma forma de verificar se uma condicao e verdadeira ou falsa.";"Uma sequencia de padroes que e usada para escolher entre diferentes definicoes de uma funcao.";"Uma maneira de declarar multiplas variaveis.";"A atribuicao de um valor a uma variavel.";"Uma sequencia de padroes que e usada para escolher entre diferentes definicoes de uma funcao."
"M2_Q09";2;"Em Haskell como uma funcao que recebe um `Int` e retorna um `Bool` e prototipada?";"c";"`funcao :: Int`";"`funcao -> Int Bool`";"`funcao :: Int -> Bool`";"`funcao = Int -> Bool`";"`funcao : Int -> Bool`";"`funcao :: Int -> Bool`"
"M2_Q10";2;"Qual dos seguintes tipos de dados e de precisao arbitraria em Haskell?";"b";"`Int`";"`Integer`";"`Float`";"`Double`";"`Char`";"`Integer`"
"M2_Q11";2;"O que a expressao `[x*2 | x <- [1..5]; odd x]` resulta em Haskell?";"d";"Uma lista com todos os numeros impares de 1 a 5.";"Uma lista com os quadrados dos numeros impares de 1 a 5.";"Uma lista com o dobro de todos os numeros de 1 a 5.";"Uma lista com o dobro dos numeros impares de 1 a 5; que e `[2; 6; 10]`.";"Uma lista vazia.";"Uma lista com o dobro dos numeros impares de 1 a 5; que e `[2; 6; 10]`."
"M2_Q11";4;"O que e um 'type class' (classe de tipo) em Haskell?";"c";"Uma classe que define um tipo de dado especifico.";"Um mecanismo para heranca de classes similar a linguagens orientadas a objetos.";"Um conjunto de funcoes que se aplicam a um grupo de tipos permitindo a reutilizacao de codigo polimorfico.";"Uma forma de criar variaveis mutaveis.";"A definicao de um novo tipo de dado em uma lista.";"Um conjunto de funcoes que se aplicam a um grupo de tipos permitindo a reutilizacao de codigo polimorfico."
"M2_Q12";2;"O que e uma funcao de ordem superior (higher-order function)?";"a";"Uma funcao que recebe apenas um argumento e retorna um valor.";"Uma funcao que nao pode receber outras funcoes como argumento.";"Uma funcao que tem apenas um tipo de retorno.";"Uma funcao que pode receber outras funcoes como argumentos ou retornar uma funcao como resultado.";"Uma funcao que sempre retorna um valor booleano.";"Uma funcao que pode receber outras funcoes como argumentos ou retornar uma funcao como resultado."
"M2_Q13";2;"No material a funcao `map` e um exemplo de funcao de ordem superior. Qual sua finalidade?";"c";"Remover elementos de uma lista que nao satisfazem uma condicao.";"Acumular todos os elementos de uma lista em um unico valor.";"Aplicar uma funcao a cada elemento de uma lista e retornar uma nova lista com os resultados.";"Reverter a ordem dos elementos em uma lista.";"Filtrar elementos de uma lista que sao pares.";"Aplicar uma funcao a cada elemento de uma lista e retornar uma nova lista com os resultados."
"M2_Q14";2;"O que sao as funcoes `lambda` em Haskell?";"b";"Funcoes que so podem ser usadas para loops.";"Funcoes anonimas sem nome frequentemente usadas como argumentos para funcoes de ordem superior.";"Funcoes que sempre retornam uma lista vazia.";"Funcoes que sempre recebem dois argumentos.";"Funcoes que sao nomeadas com a palavra-chave `lambda`.";"Funcoes anonimas sem nome frequentemente usadas como argumentos para funcoes de ordem superior."
"M2_Q15";2;"Qual das seguintes funcoes utilitarias e usada para remover uma quantidade x de elementos do inicio de uma lista?";"e";"`take`";"`head`";"`reverse`";"`length`";"`drop`";"`drop`"
"M2_Q16";2;"Qual a funcao da `list comprehension` (compreensao de lista) em Haskell?";"c";"Criar um loop infinito sobre uma lista.";"Apenas criar listas com progressoes aritmeticas.";"Permitir a criacao concisa de listas a partir de outras listas com filtros e transformacoes.";"Sempre retornar uma lista vazia.";"Permitir a criacao de uma lista com elementos de tipos diferentes.";"Permitir a criacao concisa de listas a partir de outras listas com filtros e transformacoes."
"M2_Q17";2;"No contexto de uma funcao recursiva sobre listas o que representa o caso base?";"d";"A parte da funcao que se chama novamente.";"A parte da funcao que lida com o erro.";"A condicao que verifica se a lista esta cheia.";"A condicao de parada geralmente para uma lista vazia que retorna um valor sem fazer uma chamada recursiva.";"A parte da funcao que adiciona um elemento no final da lista.";"A condicao de parada geralmente para uma lista vazia que retorna um valor sem fazer uma chamada recursiva."
"M2_Q18";2;"O que acontece se uma funcao recursiva nao tiver um caso base adequado?";"a";"A funcao entra em um loop infinito ou gera um erro de pilha (stack overflow).";"O compilador de Haskell corrige o erro automaticamente.";"A funcao retorna um valor nulo.";"O programa continua a execucao normalmente.";"A funcao sempre retorna 0.";"A funcao entra em um loop infinito ou gera um erro de pilha (stack overflow)."
"M2_Q19";2;"Qual dos seguintes tipos de dados nao e um tipo primitivo em Haskell?";"e";"Bool.";"Int.";"Char.";"Float.";"Listas.";"Listas."
"M2_Q20";2;"De acordo com o material qual das seguintes afirmacoes sobre a linguagem Haskell e verdadeira?";"b";"Haskell nao permite a criacao de listas infinitas.";"Haskell e estaticamente e fortemente tipada.";"Haskell permite o uso de variaveis mutaveis.";"Haskell e uma linguagem puramente imperativa.";"Haskell possui uma sintaxe baseada em C e Java.";"Haskell e estaticamente e fortemente tipada."
"M3_Q01";3;"De acordo com o material como sao classificadas as linguagens que sao voltadas para a maquina e usam instrucoes do microprocessador?";"a";"Linguagens de baixo nivel.";"Linguagens de alto nivel.";"Linguagens de programacao imperativas.";"Linguagens Assembly modernas.";"Linguagens de nivel intermediario.";"Linguagens de baixo nivel."
"M3_Q02";3;"O que caracteriza as linguagens de alto nivel?";"c";"Elas dependem da arquitetura do computador.";"Elas utilizam apenas o paradigma imperativo.";"Elas utilizam sintaxe mais estruturada facilitando o entendimento e edicao dos programas.";"Elas nao necessitam de um tradutor para a maquina.";"Elas sao escritas utilizando as instrucoes do microprocessador.";"Elas utilizam sintaxe mais estruturada facilitando o entendimento e edicao dos programas."
"M3_Q03";3;"Qual dos seguintes nao e um paradigma de linguagem de programacao mencionado no fluxograma do material?";"d";"Declarativo.";"Imperativo.";"Orientado a objetos.";"Paralelo.";"Funcional.";"Paralelo."
"M3_Q04";3;"Qual das seguintes linguagens e citada como exemplo de paradigma imperativo?";"c";"Lisp.";"Haskell.";"C.";"Prolog.";"Eiffel.";"C."
"M3_Q05";3;"O que caracteriza o paradigma funcional de acordo com o material?";"b";"Estado e atribuicao.";"Funcao aplicacao e avaliacao.";"Relacao e deducao.";"Objeto e mensagem.";"Processo e comunicacao.";"Funcao aplicacao e avaliacao."
"M3_Q06";3;"Quais paradigmas compoem a linguagem C++ de acordo com o material?";"a";"Imperativo Orientado a Objetos e Concorrente.";"Apenas Orientado a Objetos.";"Funcional e Orientado a Objetos.";"Apenas Imperativo.";"Imperativo e Funcional.";"Imperativo Orientado a Objetos e Concorrente."
"M3_Q07";3;"Qual e a principal desvantagem da interpretacao conforme o material?";"b";"Falta de portabilidade.";"Problemas com eficiencia e maior consumo de memoria.";"Dificuldade para prototipacao.";"Problemas com depuracao.";"A sintaxe ser complexa.";"Problemas com eficiencia e maior consumo de memoria."
"M3_Q08";3;"O que uma linguagem de programacao "implementavel" deve ser?";"d";"Capaz de ser executada diretamente na maquina.";"Uma linguagem interpretada.";"Uma linguagem com sintaxe simples.";"Passivel de traducao para um formalismo que seja executavel em uma maquina.";"Uma linguagem que suporta multiplos paradigmas.";"Passivel de traducao para um formalismo que seja executavel em uma maquina."
"M3_Q09";3;"O que e a sintaxe de uma linguagem de programacao?";"e";"O significado de um programa.";"O comportamento de um programa em tempo de execucao.";"O conjunto de regras que definem o estado do programa.";"A traducao de um programa para linguagem de maquina.";"O formato do programa ou seja como as construcoes devem ser arranjadas.";"O formato do programa ou seja como as construcoes devem ser arranjadas."
"M3_Q10";3;"O que a semantica de uma linguagem de programacao descreve?";"c";"O formato de um programa.";"A performance de um programa.";"O significado de um programa.";"A velocidade de compilacao.";"A portabilidade do programa.";"O significado de um programa."
"M3_Q11";3;"Qual das seguintes frases sintaticamente corretas e citada como semanticamente incorreta no material?";"a";""Joao e um solteiro casado".";""A bola azul".";""A mesa esta no chao".";""O sol e quente".";""Cachorro latem muito".";""Joao e um solteiro casado"."
"M3_Q12";3;"Como a sintaxe de um programa e verificada?";"d";"Somente em tempo de execucao.";"Atraves de testes.";"Pela semantica do programa.";"Com o uso de compiladores.";"Por um interpretador.";"Com o uso de compiladores."
"M3_Q13";3;"O que a Forma de Backus Naur (BNF) e usada para definir?";"a";"A sintaxe de uma linguagem.";"A semantica de uma linguagem.";"O comportamento de um programa.";"A eficiencia de um programa.";"A portabilidade do codigo.";"A sintaxe de uma linguagem."
"M3_Q14";3;"Qual e a principal vantagem da compilacao de acordo com o material?";"e";"Portabilidade.";"Facilidade de prototipacao.";"Facilidade de depuracao.";"Menor consumo de memoria.";"Eficiencia.";"Eficiencia."
"M3_Q15";3;"Na fase de Analise Lexica de um compilador o que o codigo fonte e transformado?";"a";"Em linguagem de maquina.";"Em uma arvore abstrata.";"Em uma sequencia de caracteres.";"Em um programa executavel.";"Em um conjunto de tokens.";"Em um conjunto de tokens."
"M3_Q16";3;"Qual e o nome da fase de compilacao que cria uma arvore abstrata a partir da gramatica da LP?";"d";"Analise Lexica.";"Analise Semantica.";"Otimizacao de codigo.";"Analise Sintatica.";"Traducao para linguagem intermediaria.";"Analise Sintatica."
"M3_Q17";3;"O que um compilador faz?";"b";"Executa o programa diretamente.";"Traduz um programa fonte para um programa objeto semanticamente equivalente.";"Apenas verifica a sintaxe de um programa.";"Apenas interpreta o codigo em tempo de execucao.";"Gera um codigo intermediario que nao precisa ser traduzido.";"Traduz um programa fonte para um programa objeto semanticamente equivalente."
"M3_Q18";3;"No caso de linguagens interpretadas como Java e C# o que e a linguagem intermediaria gerada a partir do codigo fonte?";"c";"Linguagem de maquina.";"Linguagem Assembly.";"Bytecode.";"Codigo executavel.";"Linguagem de alto nivel.";"Bytecode."
"M3_Q19";3;"O que significa um programa ser "sintaticamente correto" mas "semanticamente incorreto"?";"b";"Que ele nao pode ser compilado.";"Que ele pode ser gramaticalmente correto mas expressa um significado que nao pode ser verdadeiro.";"Que ele nao pode ser executado.";"Que ele nao e portavel.";"Que a semantica do programa melhora a legibilidade.";"Que ele pode ser gramaticalmente correto mas expressa um significado que nao pode ser verdadeiro."
"M3_Q20";3;"Qual dos seguintes pares de linguagens sao citados como sendo sintaticamente diferentes mas semanticamente identicos para um determinado trecho de codigo?";"a";"Pascal e C.";"Python e Java.";"Haskell e C++.";"Lisp e Prolog.";"C# e Python.";"Pascal e C."
"M4_Q01";"4";"O que e um "valor" em programacao de acordo com a definicao apresentada no material?";"e";"Um conjunto de dados para processamento.";"Um tipo de dado que pode ser decomposto.";"Um erro que ocorre durante a execucao.";"Um comando que altera o estado do programa.";"Qualquer entidade que pode ser manipulada por um programa.";"Qualquer entidade que pode ser manipulada por um programa."
"M4_Q02";"4";"Qual e a principal diferenca entre um valor de "primeira classe" e um de "segunda classe"?";"a";"Valores de primeira classe nao tem restricoes de uso enquanto os de segunda classe tem.";"Valores de segunda classe sao mais eficientes.";"Valores de primeira classe podem ser decompostos enquanto os de segunda classe nao.";"Valores de primeira classe so podem ser passados como argumentos.";"Valores de segunda classe so podem ser retornados de funcoes.";"Valores de primeira classe nao tem restricoes de uso enquanto os de segunda classe tem."
"M4_Q03";"4";"De acordo com o material qual das seguintes linguagens nao possui um tipo booleano primitivo e usa a convencao de que 0 representa falso?";"c";"Java.";"Ada.";"C.";"Python.";"Haskell.";"C."
"M4_Q04";"4";"O que e um "tipo" na programacao conforme a definicao mais precisa do material?";"d";"Uma variavel que armazena um valor.";"Qualquer conjunto de valores.";"Uma forma de organizar dados.";"Um conjunto de valores equipado com um conjunto de operacoes.";"A sintaxe de uma linguagem.";"Um conjunto de valores equipado com um conjunto de operacoes."
"M4_Q05";"4";"Um tipo cujos valores sao atomicos e impossiveis de decompor e classificado como:";"a";"Tipo primitivo.";"Tipo composto.";"Tipo recursivo.";"Tipo de primeira classe.";"Tipo de segunda classe.";"Tipo primitivo."
"M4_Q06";"4";"Qual dos seguintes nao e um tipo composto mencionado no material?";"e";"Tuplas.";"Arrays.";"Unioes.";"Objetos.";"Inteiros.";"Inteiros."
"M4_Q07";"4";"Em um produto cartesiano o que e agrupado?";"b";"Apenas valores de tipos identicos.";"Valores de varios tipos (possivelmente diferentes) em tuplas.";"Funcoes e arrays.";"Apenas valores de tipo primitivo.";"Nenhum valor e agrupado.";"Valores de varios tipos (possivelmente diferentes) em tuplas."
"M4_Q08";"4";"Qual e a principal diferenca entre um tipo "monomorfico" e um "polimorfico"?";"c";"Monomorfismo diminui a flexibilidade enquanto polimorfismo a aumenta.";"Monomorfismo facilita a verificacao de tipos enquanto polimorfismo nao.";"Monomorfismo associa um tipo especifico a uma entidade enquanto polimorfismo permite que a abstracao atue sobre multiplos tipos.";"Monomorfismo e usado em linguagens fracamente tipadas polimorfismo em fortemente tipadas.";"Nao ha diferenca significativa.";"Monomorfismo associa um tipo especifico a uma entidade enquanto polimorfismo permite que a abstracao atue sobre multiplos tipos."
"M4_Q09";"4";"O que caracteriza o polimorfismo do tipo "ad-hoc"?";"d";"A abstracao atua uniformemente sobre uma familia de tipos.";"E sinonimo de heranca.";"A funcao e identificada pelo tipo do retorno.";"A abstracao atua sobre um numero finito de tipos nao relacionados mas se comporta diferentemente dependendo do tipo.";"Ele permite a criacao de codigo generico.";"A abstracao atua sobre um numero finito de tipos nao relacionados mas se comporta diferentemente dependendo do tipo."
"M4_Q10";"4";"Qual tipo de polimorfismo ocorre quando um identificador e aplicavel a mais de uma operacao e o compilador consegue distinguir a operacao a ser chamada usando somente informacoes de tipo?";"a";"Sobrecarga.";"Coercao.";"Inclusao.";"Parametrico.";"Universal.";"Sobrecarga."
"M4_Q11";"4";"O que e a "coercao" no contexto de sistemas de tipos?";"b";"Um tipo de polimorfismo ad-hoc.";"Uma conversao implicita de tipo realizada automaticamente pelo compilador.";"A redefinicao de um metodo em uma subclasse.";"Um tipo de casting explicito.";"A identificacao da funcao pelo tipo do parametro.";"Uma conversao implicita de tipo realizada automaticamente pelo compilador."
"M4_Q12";"4";"Qual o principal conceito por tras do polimorfismo de "inclusao"?";"e";"Heranca multipla.";"Interfaces.";"Funcoes genericas.";"Sobrecarga de operadores.";"Um tipo pode ter subtipos que herdam suas caracteristicas.";"Um tipo pode ter subtipos que herdam suas caracteristicas."
"M4_Q13";"4";"No polimorfismo universal uma unica abstracao atua de maneira uniforme sobre uma familia de tipos. Qual das seguintes opcoes e um exemplo desse tipo de polimorfismo?";"d";"Sobrecarga.";"Coercao.";"Subtipo.";"Parametrico.";"Heranca.";"Parametrico."
"M4_Q14";"4";"O que e um sistema de tipo "fortemente tipado"?";"b";"Um sistema que permite conversao implicita de tipos.";"Um sistema que e mais propenso a gerar erros ou nao compilar quando os tipos esperados nao correspondem.";"Um sistema onde o tipo de uma variavel pode mudar dinamicamente.";"Um sistema que nao exige a declaracao de tipos para variaveis.";"Um sistema que usa coercao extensivamente.";"Um sistema que e mais propenso a gerar erros ou nao compilar quando os tipos esperados nao correspondem."
"M4_Q15";"4";"Em uma linguagem com tipagem estatica o que determina o tipo das expressoes?";"c";"A execucao do programa.";"Apenas os valores que a expressao pode assumir.";"O tempo de compilacao.";"O tipo de retorno da funcao onde a expressao se encontra.";"O tipo de dado de uma variavel.";"O tempo de compilacao."
"M4_Q16";"4";"Qual das seguintes linguagens e citada como sendo forte e dinamicamente tipada?";"a";"Python.";"C.";"Java.";"JavaScript.";"Haskell.";"Python."
"M4_Q17";"4";"Em Java um exemplo de sobrecarga independente de contexto e:";"e";"O operador `+` para inteiros.";"A divisao de ponto flutuante por inteiros.";"O uso de `break` em um loop.";"A redefinicao de um metodo em uma subclasse.";"A definicao de dois metodos com o mesmo nome mas com tipos de parametros diferentes.";"A definicao de dois metodos com o mesmo nome mas com tipos de parametros diferentes."
"M4_Q18";"4";"Qual a desvantagem do uso irrestrito de coerçao?";"d";"Aumento da verbosidade do codigo.";"Obriga o programador a declarar todos os tipos de forma explicita.";"Melhora a legibilidade.";"Pode levar a resultados inesperados e erros dificeis de depurar.";"Melhora o desempenho do programa.";"Pode levar a resultados inesperados e erros dificeis de depurar."
"M4_Q19";"4";"O que a heranca caracteriza de acordo com o material?";"a";"Apenas uma relacao entre implementacoes para reuso de codigo.";"Sempre uma relacao de subtipagem.";"Uma forma de polimorfismo universal.";"Um tipo de coerçao.";"Um tipo de polimorfismo ad-hoc.";"Apenas uma relacao entre implementacoes para reuso de codigo."
"M4_Q20";"4";"O que o polimorfismo parametrico permite de acordo com o material?";"b";"Que o codigo seja escrito de forma monomorfica.";"Que uma abstracao possa ser escrita de forma generica tratando valores sem considerar o tipo especifico.";"Apenas o uso de heranca.";"A sobrecarga de operadores.";"A conversao implicita de tipos.";"Que uma abstracao possa ser escrita de forma generica tratando valores sem considerar o tipo especifico."
"M5_Q01";"5";"De acordo com o material qual arquitetura de computadores exerceu um efeito crucial sobre o projeto das linguagens de programacao imperativas?";"c";"Arquitetura de Harvard.";"Arquitetura de Babbage.";"Arquitetura de von Neumann.";"Arquitetura de Princeton.";"Arquitetura de Turing.";"Arquitetura de von Neumann."
"M5_Q02";"5";"Na programacao imperativa o que as variaveis modelam?";"b";"As instrucoes da CPU.";"As celulas de memoria.";"Os sistemas de entrada e saida.";"A unidade de controle.";"Os registradores.";"As celulas de memoria."
"M5_Q03";"5";"O que sao variaveis "persistentes" segundo a classificacao do material?";"a";"Variaveis que tem existencia independente do tempo de vida de um programa como arquivos.";"Variaveis que sao criadas e usadas dentro de um programa.";"Variaveis que armazenam valores de tipos primitivos.";"Variaveis que armazenam valores de tipos compostos.";"Variaveis que sao alocadas na Stack.";"Variaveis que tem existencia independente do tempo de vida de um programa como arquivos."
"M5_Q04";"5";"Qual tipo de variavel e alocada dinamicamente podendo ser criada e destruida a qualquer instante?";"e";"Variaveis primitivas.";"Variaveis temporarias.";"Variaveis estaticas.";"Variaveis da Stack.";"Variaveis da Heap.";"Variaveis da Heap."
"M5_Q05";"5";"O que e um "dangling reference" (referencia solta)?";"c";"Um apontador que nunca foi inicializado.";"Uma variavel que aponta para um endereco de memoria valido.";"Um apontador para uma variavel heap que ja foi desalocada.";"Um tipo de dado primitivo.";"Um erro de compilacao.";"Um apontador para uma variavel heap que ja foi desalocada."
"M5_Q06";"5";"No contexto de escopo o que define o "tempo de vida" de uma variavel?";"b";"A parte do programa onde a variavel pode ser acessada.";"O intervalo de tempo entre sua criacao e sua destruicao.";"A sua declaracao no inicio da execucao.";"O escopo do bloco onde ela esta.";"O tamanho da variavel.";"O intervalo de tempo entre sua criacao e sua destruicao."
"M5_Q07";"5";"Em linguagens com escopo lexico o que determina o escopo de uma variavel?";"a";"A estrutura textual do programa.";"A ordem de execucao das rotinas.";"A linha de execucao do programa.";"O valor da variavel em tempo de execucao.";"O tamanho do programa.";"A estrutura textual do programa."
"M5_Q08";"5";"Qual das seguintes alternativas descreve a diferenca entre expressoes e comandos de acordo com o material?";"e";"Expressoes modificam estados comandos leem estados.";"Nao ha diferenca entre eles.";"Ambos modificam estados mas de formas diferentes.";"Expressoes sao sempre booleanas comandos nao.";"Expressoes leem estados e computam valores enquanto comandos modificam estados.";"Expressoes leem estados e computam valores enquanto comandos modificam estados."
"M5_Q09";"5";"Qual dos seguintes nao e um tipo fundamental de comando mencionado no material?";"c";"Atribuicoes.";"Chamadas de Procedimento.";"Comandos Recursivos.";"Comandos condicionais.";"Comandos iterativos.";"Comandos Recursivos."
"M5_Q10";"5";"O que caracteriza um comando "colateral"?";"a";"Um conjunto de comandos executados sem uma ordem particular ou seja nao deterministicos.";"Um comando que e executado apos o termino de outro.";"Um comando que transfere o controle para outro ponto do programa.";"Um comando que repete a execucao de um conjunto de instrucoes.";"Um comando que e sempre deterministico.";"Um conjunto de comandos executados sem uma ordem particular ou seja nao deterministicos."
"M5_Q11";"5";"O que a Transparencia Referencial em uma linguagem de programacao significa?";"d";"Que a linguagem e estritamente tipada.";"Que as funcoes podem ter efeitos colaterais.";"Que qualquer comando pode ser substituido por outro.";"Que qualquer expressao pode ser substituida por outra de mesmo valor sem impacto (ausencia de efeitos colaterais).";"Que a linguagem permite o uso irrestrito de Jumps.";"Que qualquer expressao pode ser substituida por outra de mesmo valor sem impacto (ausencia de efeitos colaterais)."
"M5_Q12";"5";"Por que de acordo com o material as linguagens imperativas nao garantem a transparencia referencial?";"a";"Porque a avaliacao de uma expressao pode alterar o estado de variaveis.";"Porque elas usam alocacao de memoria estatica.";"Porque os comandos iterativos nao sao deterministicos.";"Porque as chamadas de procedimento nao tem efeitos colaterais.";"Porque o escopo e sempre lexico.";"Porque a avaliacao de uma expressao pode alterar o estado de variaveis."
"M5_Q13";"5";"Qual das desvantagens de expressoes com efeitos colaterais e mencionada no material?";"d";"Aumento da concisao.";"Maior reusabilidade do codigo.";"Facil entendimento da semantica.";"Perda de legibilidade e baixa reusabilidade.";"Diminuicao da dependencia de um contexto global.";"Perda de legibilidade e baixa reusabilidade."
"M5_Q14";"5";"O que e um "sequenciador"?";"e";"Um tipo de loop (laco de repeticao).";"Um comando que e executado sequencialmente.";"Um comando que transfere o controle para o proximo comando.";"Um comando que garante a ordem de execucao.";"Uma construcao que transfere o controle para outro ponto do programa.";"Uma construcao que transfere o controle para outro ponto do programa."
"M5_Q15";"5";"O que caracteriza um `jump` (salto) em programacao?";"b";"Um comando de unica entrada e unica saida.";"Uma transferencia de controle explicita de um ponto para outro do programa.";"Um comando que termina a execucao de um bloco de codigo.";"Um comando que manipula exececoes.";"Um comando que e usado apenas para loops.";"Uma transferencia de controle explicita de um ponto para outro do programa."
"M5_Q16";"5";"Qual o problema do uso irrestrito de `jumps`?";"a";"Gera comandos do tipo multiplas-entradas e multiplas-saidas (programas spaghetti).";"Melhora a legibilidade e a organizacao do codigo.";"Evita que um comando seja executado abruptamente.";"Torna o codigo mais conciso.";"Aumenta a reusabilidade do codigo.";"Gera comandos do tipo multiplas-entradas e multiplas-saidas (programas spaghetti)."
"M5_Q17";"5";"Qual e a funcao de um `escape` (como `break` `continue` ou `return` em Java)?";"c";"Garantir que um comando seja sempre executado sequencialmente.";"Criar um loop infinito.";"Terminar a execucao de um comando composto transferindo o controle para o proximo.";"Causar um erro em tempo de execucao.";"Iniciar a execucao de um novo programa.";"Terminar a execucao de um comando composto transferindo o controle para o proximo."
"M5_Q18";"5";"Quando e gerada uma `exception` (excecao)?";"b";"Quando o programa termina a sua execucao normalmente.";"Quando condicoes anormais ocorrem como uma divisao por zero.";"Quando um loop e executado repetidamente.";"Quando um comando e executado sequencialmente.";"Quando um `jump` e utilizado.";"Quando condicoes anormais ocorrem como uma divisao por zero."
"M5_Q19";"5";"O que o material define como um programa "robusto"?";"a";"Um programa que consegue se recuperar de condicoes anormais sem encerrar a sua execucao.";"Um programa que nunca gera erros.";"Um programa que e escrito em uma linguagem funcional.";"Um programa que e muito rapido.";"Um programa que usa alocacao de memoria estatica.";"Um programa que consegue se recuperar de condicoes anormais sem encerrar a sua execucao."
"M5_Q20";"5";"Na arquitetura de von Neumann como os dados e as instrucoes devem ser transportados?";"b";"Da CPU para a Memoria Principal.";"Da Memoria Principal para a CPU.";"Diretamente para os sistemas de Entrada/Saida.";"Apenas da ALU para os Registradores.";"Eles sao armazenados apenas na CPU.";"Da Memoria Principal para a CPU."
"M6_Q01";"6";"Qual a principal caracteristica que diferencia o paradigma funcional do paradigma imperativo?";"b";"O uso de comandos de atribuicao para modificar o estado de variaveis.";"A ausencia de mudanca de estado baseada em funcoes matematicas.";"A capacidade de usar lacos de repeticao como `for` e `while`.";"A obrigatoriedade do uso de expressoes condicionais como `if/else`.";"A presenca de variaveis mutaveis.";"A ausencia de mudanca de estado baseada em funcoes matematicas."
"M6_Q02";"6";"Em Haskell como e definida a prototipacao de tipos para uma funcao?";"a";"Uma sequencia dos tipos dos argumentos seguida do tipo do valor de retorno.";"A definicao do tipo e opcional pois a linguagem deduz automaticamente.";"Com uma notacao de seta (`->`) entre o nome da funcao e o tipo.";"Usando a palavra-chave `type` antes do nome da funcao.";"Nao existe prototipacao de tipos em Haskell.";"Uma sequencia dos tipos dos argumentos seguida do tipo do valor de retorno."
"M6_Q03";"6";"O que e a Transparencia Referencial no contexto da programacao funcional?";"b";"Um programa funcional e completamente determinado pelas entradas que recebe sem efeitos colaterais.";"A habilidade de uma funcao modificar o estado de variaveis externas.";"A capacidade de se referir a variaveis de outros escopos.";"O uso de ponteiros para acessar dados na memoria.";"A definicao de funcoes que dependem da ordem de execucao.";"Um programa funcional e completamente determinado pelas entradas que recebe sem efeitos colaterais."
"M6_Q04";"6";"Qual a principal diferenca entre os tipos `Int` e `Integer` em Haskell?";"c";"`Int` e usado para numeros de ponto flutuante e `Integer` para inteiros.";"`Integer` e um tipo de dados mais antigo e obsoleto.";"`Int` e para inteiros de precisao fixa enquanto `Integer` e para inteiros de precisao arbitraria.";"`Integer` e um subtipo de `Int`.";"Nao ha diferenca entre os dois tipos.";"`Int` e para inteiros de precisao fixa enquanto `Integer` e para inteiros de precisao arbitraria."
"M6_Q05";"6";"Em Haskell por que a clausula `else` e obrigatoria em uma expressao `if-then-else`?";"a";"Porque o `if` em Haskell e uma expressao que deve retornar um valor em qualquer caso.";"Porque a sintaxe da linguagem exige uma estrutura completa.";"Para evitar erros de compilacao semanticos.";"Apenas por uma questao de boa pratica de programacao.";"Nao e obrigatoria a clausula `else` pode ser omitida.";"Porque o `if` em Haskell e uma expressao que deve retornar um valor em qualquer caso."
"M6_Q06";"6";"Qual e a funcao da notacao `| guarda = expressao` na definicao de uma funcao em Haskell?";"d";"Para criar um laco de repeticao com base em uma condicao.";"Para definir uma funcao recursiva.";"Para declarar uma variavel local dentro da funcao.";"Para estabelecer uma distincao entre casos diferentes na definicao de uma funcao.";"Para definir um tipo de dado personalizado.";"Para estabelecer uma distincao entre casos diferentes na definicao de uma funcao."
"M6_Q07";"6";"Em Haskell o que significa que uma funcao e um valor de primeira ordem?";"e";"Que ela sempre retorna um valor inteiro.";"Que ela e a primeira funcao a ser executada no programa.";"Que seu nome e sempre escrito em letras maiusculas.";"Que ela nao pode ser usada como argumento de outra funcao.";"Que uma funcao pode ser tratada como qualquer outro valor como argumentos ou retornos de outras funcoes.";"Que uma funcao pode ser tratada como qualquer outro valor como argumentos ou retornos de outras funcoes."
"M6_Q08";"6";"Qual das seguintes opcoes representa uma caracteristica da linguagem Haskell?";"a";"Possui avaliacao preguicosa (lazy evaluation) e permite trabalhar com listas infinitas.";"Usa comandos de atribuicao para modificar o estado de variaveis.";"E uma linguagem puramente imperativa.";"Sua sintaxe e baseada em C e Java.";"Nao possui um sistema de deducao automatica de tipos.";"Possui avaliacao preguicosa (lazy evaluation) e permite trabalhar com listas infinitas."
"M6_Q09";"6";"Como um programa Haskell representa a soma dos numeros de 1 a 10 de forma declarativa?";"b";"Atraves de um laco de repeticao `for`.";"Atraves da aplicacao da funcao `sum` em uma lista de inteiros `[1..10]`.";"Atraves de um comando de atribuicao em uma variavel.";"Usando uma expressao condicional.";"Implementando uma funcao recursiva que se chama ate 10 vezes.";"Atraves da aplicacao da funcao `sum` em uma lista de inteiros `[1..10]`."
"M6_Q10";"6";"Qual dos seguintes tipos de dados nao e um tipo primitivo em Haskell?";"c";"Bool.";"Int.";"Listas.";"Char.";"String.";"Listas."
"M6_Q11";"6";"No paradigma funcional as variaveis sao consideradas:";"a";"Imutaveis.";"Mutaveis.";"Temporarias.";"Globais.";"Sempre numericas.";"Imutaveis."
"M6_Q12";"6";"O que e um 'casamento de padroes' (pattern matching) na definicao de funcoes?";"d";"E um metodo de ordenacao de dados em uma lista.";"Uma maneira de declarar multiplas variaveis.";"Uma forma de verificar se uma condicao e verdadeira ou falsa.";"Uma sequencia de padroes que e usada para escolher entre diferentes definicoes de uma funcao.";"A atribuicao de um valor a uma variavel.";"Uma sequencia de padroes que e usada para escolher entre diferentes definicoes de uma funcao."
"M6_Q13";"6";"Em Haskell qual e o tipo de uma lista que armazena elementos de tipos diferentes?";"e";"Nao e possivel criar uma lista com elementos de tipos diferentes pois listas em Haskell sao homogeneas.";"`[Any]`";"`[Mixed]`";"`[Various]`";"`HeteroList`";"Nao e possivel criar uma lista com elementos de tipos diferentes pois listas em Haskell sao homogeneas."
"M6_Q14";"6";"Qual e a funcao do operador `++` em Haskell?";"c";"Ele realiza a soma de dois numeros inteiros.";"Ele concatena o primeiro elemento com o restante da lista.";"Ele concatena duas listas.";"Ele adiciona um elemento ao final da lista.";"Ele remove um elemento da lista.";"Ele concatena duas listas."
"M6_Q15";"6";"O que a notacao `[1 3..7]` em Haskell resulta?";"a";"Uma lista com os numeros [1 3 5 7].";"Uma lista com os numeros [1 2 3 4 5 6 7].";"Um erro de sintaxe.";"Uma lista vazia.";"O numero 7.";"Uma lista com os numeros [1 3 5 7]."
"M6_Q16";"6";"Qual das seguintes funcoes utilitarias retorna o primeiro elemento de uma lista?";"d";"`tail`";"`last`";"`drop`";"`head`";"`length`";"`head`"
"M6_Q17";"6";"Qual a funcao de um guarda em uma definicao de funcao em Haskell?";"e";"Para garantir que a funcao retorne sempre o mesmo tipo de dado.";"Para proteger o codigo de erros de execucao.";"Para definir um caso recursivo.";"Para declarar o nome da funcao.";"Para escolher entre uma sequencia de resultados de mesmo tipo baseando-se em condicoes logicas.";"Para escolher entre uma sequencia de resultados de mesmo tipo baseando-se em condicoes logicas."
"M6_Q18";"6";"O que a expressao `[x^2 | x <- [1..5] even x]` resulta em Haskell?";"b";"Uma lista com todos os numeros pares de 1 a 5.";"Uma lista com os quadrados dos numeros pares de 1 a 5.";"Uma lista com os quadrados de todos os numeros de 1 a 5.";"Um erro de sintaxe.";"Uma lista vazia.";"Uma lista com os quadrados dos numeros pares de 1 a 5."
"M6_Q19";"6";"A programacao funcional se baseia em qual conceito matematico?";"a";"Funcoes matematicas.";"Algebra linear.";"Geometria euclidiana.";"Teoria dos conjuntos.";"Calculo diferencial.";"Funcoes matematicas."
"M6_Q20";"6";"Qual e a notacao correta em Haskell para uma funcao que recebe um `Int` e retorna um `Bool`?";"c";"`funcao :: Int`";"`funcao -> Int Bool`";"`funcao :: Int -> Bool`";"`funcao = Int -> Bool`";"`funcao : Int -> Bool`";"`funcao :: Int -> Bool`"
"C2_Q01";"-2";"Qual a estrutura de uma funcao recursiva para somar os elementos de uma lista?";"c";"A funcao deve usar um laco de repeticao `for`.";"A funcao deve modificar o estado de uma variavel acumuladora.";"A funcao deve ter um caso base para uma lista vazia e um caso recursivo para uma lista nao vazia.";"A funcao deve sempre retornar 0.";"A funcao deve usar a funcao `sum` em todos os casos.";"A funcao deve ter um caso base para uma lista vazia e um caso recursivo para uma lista nao vazia."
"C2_Q02";"-2";"No contexto de recursao sobre listas o que representa o `head` de uma lista?";"d";"O ultimo elemento da lista.";"O tamanho da lista.";"A lista completa.";"O primeiro elemento da lista.";"A cauda da lista.";"O primeiro elemento da lista."
"C2_Q03";"-2";"Em uma funcao recursiva que processa uma lista `(a:as)` o que `a` e `as` representam?";"a";"`a` e a cabeca da lista e `as` e a cauda (corpo) da lista.";"`a` e um contador e `as` e o resultado final.";"`a` e `as` sao argumentos de tipos diferentes.";"`a` e o primeiro elemento e `as` e a soma dos demais.";"`a` e um acumulador e `as` e o elemento atual.";"`a` e a cabeca da lista e `as` e a cauda (corpo) da lista."
"C2_Q04";"-2";"Considerando a funcao `sumList [] = 0` e `sumList (a:as) = a + sumList as` qual seria o resultado de `sumList [10]`?";"b";"0.";"10.";"1.";"[10].";"Erro de compilacao.";"10."
"C2_Q05";"-2";"O que acontece se uma funcao recursiva nao tiver um caso base adequado?";"a";"A funcao entra em um loop infinito ou gera um erro de pilha (stack overflow).";"O compilador de Haskell corrige o erro automaticamente.";"A funcao retorna um valor nulo.";"O programa continua a execucao normalmente.";"A funcao sempre retorna 0.";"A funcao entra em um loop infinito ou gera um erro de pilha (stack overflow)."
"C2_Q06";"-2";"Qual e a definicao correta do caso base na recursao?";"c";"A parte da funcao que se chama novamente.";"O ponto de partida da recursao.";"A condicao de parada que retorna um valor sem fazer uma chamada recursiva.";"A parte da funcao que lida com o erro.";"A condicao que verifica se a lista esta cheia.";"A condicao de parada que retorna um valor sem fazer uma chamada recursiva."
"C2_Q07";"-2";"Em uma funcao recursiva para calcular o comprimento de uma lista qual e o caso base?";"e";"Quando a lista tem apenas um elemento.";"Quando a lista esta cheia.";"Quando o ultimo elemento e encontrado.";"Quando a lista nao tem elementos.";"Quando a lista esta vazia (`[]`) retornando 0.";"Quando a lista esta vazia (`[]`) retornando 0."
"C2_Q08";"-2";"A avaliacao preguiçosa (lazy evaluation) e um conceito importante para a recursao em Haskell porque:";"d";"Permite que a linguagem ignore erros de recursao.";"Permite a criacao de variaveis mutaveis.";"Forca a execucao de todas as chamadas recursivas de uma vez.";"Permite que a linguagem trabalhe com listas infinitas avaliando apenas o necessario.";"Garante que a funcao sempre retorne um valor inteiro.";"Permite que a linguagem trabalhe com listas infinitas avaliando apenas o necessario."
"C2_Q09";"-2";"Como a funcao `tail` se relaciona com a recursao em listas?";"c";"Ela retorna o primeiro elemento da lista.";"Ela retorna o ultimo elemento da lista.";"Ela e usada no passo recursivo para processar o restante da lista.";"Ela define o caso base da recursao.";"Ela concatena duas listas.";"Ela e usada no passo recursivo para processar o restante da lista."
"C2_Q10";"-2";"Qual seria a funcao recursiva em Haskell para calcular o tamanho de uma lista?";"b";"`length (a:as) = 1 + length (a:as)`";"`length [] = 0; length (a:as) = 1 + length as`";"`length xs = head xs + tail xs`";"`length [] = 1; length (a:as) = length as`";"`length xs = 1`";"`length [] = 0; length (a:as) = 1 + length as`"
"C2_Q11";"-2";"Em uma funcao recursiva `largest` para encontrar o maior elemento de uma lista qual o caso base correto?";"a";"`largest [x] = x`";"`largest [] = 0`";"`largest (x:xs) = x`";"`largest [x;y] = max x y`";"`largest xs = head xs`";"`largest [x] = x`"
"C2_Q12";"-2";"O que a expressao `take 3 [1 2 3 4 5]` resulta?";"c";"`[4 5]`";"`[1 2 3 4 5]`";"`[1 2 3]`";"`[3 4 5]`";"`[1]`";"`[1 2 3]`"
"C2_Q13";"-2";"Considerando a definicao de `sumList` do arquivo qual a ordem de avaliacao para `sumList [1 2]`?";"b";"`sumList [1 2]` -> `sumList [2]` -> `sumList []` -> `1+2+0`";"`sumList [1 2]` -> `1 + sumList [2]` -> `1 + (2 + sumList [])` -> `1 + (2 + 0)` -> `3`";"`sumList [1 2]` -> `sumList []` -> `1+2`";"`sumList [1 2]` -> `1+2` -> `3`";"A ordem de avaliacao nao e definida em Haskell.";"`sumList [1 2]` -> `1 + sumList [2]` -> `1 + (2 + sumList [])` -> `1 + (2 + 0)` -> `3`"
"C2_Q14";"-2";"Em Haskell qual funcao e usada para pegar a cauda (o restante) de uma lista?";"e";"`head`";"`drop`";"`reverse`";"`take`";"`tail`";"`tail`"
"C2_Q15";"-2";"O que representa a notacao `[n:ns]` em uma definicao de funcao em Haskell?";"a";"A lista com cabeca `n` e cauda `ns`.";"A lista de numeros inteiros.";"A lista de strings.";"Um erro de sintaxe.";"A lista vazia.";"A lista com cabeca `n` e cauda `ns`"
"C2_Q16";"-2";"O que acontece ao tentar acessar o `head` de uma lista vazia em Haskell?";"e";"Retorna 0.";"Retorna `null`.";"Retorna um valor indefinido.";"Retorna um erro de compilacao.";"Causa um erro em tempo de execucao pois nao ha cabeca na lista vazia.";"Causa um erro em tempo de execucao pois nao ha cabeca na lista vazia."
"C2_Q17";"-2";"Qual das seguintes opcoes e um exemplo de caso base para uma funcao recursiva que processa uma lista?";"d";"`fib 1 = 1`";"`factorial n = n * factorial (n-1)`";"`length (a:as) = 1 + length as`";"`sumList [] = 0`";"`largest (x:xs) = x`";"`sumList [] = 0`"
"C2_Q18";"-2";"Em uma funcao recursiva o que e o passo recursivo?";"a";"E a parte da funcao que se chama a si mesma com um argumento modificado geralmente menor.";"E a parte da funcao que retorna um valor constante.";"E a primeira linha da definicao da funcao.";"E o ponto em que a funcao para de se chamar.";"E a parte da funcao que lida com listas infinitas.";"E a parte da funcao que se chama a si mesma com um argumento modificado geralmente menor."
"C2_Q19";"-2";"Qual das seguintes funcoes utilitarias e usada para remover uma quantidade x de elementos do inicio de uma lista?";"e";"`take`";"`head`";"`reverse`";"`length`";"`drop`";"`drop`"
"C2_Q20";"-2";"A funcao `last` em Haskell que retorna o ultimo elemento de uma lista pode ser implementada recursivamente. Qual seria a logica do caso recursivo?";"b";"Chamar `last` com o `head` da lista.";"Chamar `last` com o `tail` da lista ate que reste apenas um elemento.";"Retornar sempre o primeiro elemento.";"Retornar a lista completa.";"Usar um laco de repeticao.";"Chamar `last` com o `tail` da lista ate que reste apenas um elemento."
"C1_Q01";"-1";"De acordo com o material qual foi a primeira linguagem de programacao de alto nivel projetada para o computador IBM 704?";"c";"COBOL.";"Algol.";"Fortran.";"Lisp.";"C.";"Fortran."
"C1_Q02";"-1";"Qual o conceito de paradigma que foi discutido na primeira aula?";"b";"Um metodo de avaliacao de software.";"Um modelo ou padrao a ser seguido.";"Um conjunto de regras gramaticais de uma linguagem.";"Uma tecnica de programacao avancada.";"Um tipo de linguagem de programacao.";"Um modelo ou padrao a ser seguido."
"C1_Q03";"-1";"O que a semantica de uma linguagem de programacao descreve?";"e";"O formato de um programa.";"A performance de um programa.";"O significado de um programa.";"A traducao de um programa para linguagem de maquina.";"O formato e significado do programa.";"O significado de um programa."
"C1_Q04";"-1";"Em linguagens imperativas qual arquitetura de computadores exerceu um efeito crucial sobre o seu projeto?";"d";"Arquitetura de Harvard.";"Arquitetura de Babbage.";"Arquitetura de Turing.";"Arquitetura de von Neumann.";"Arquitetura de Princeton.";"Arquitetura de von Neumann."
"C1_Q05";"-1";"Qual das seguintes caracteristicas NAO se aplica ao paradigma imperativo?";"a";"A ausencia de mudanca de estado.";"O uso de comandos para modificar o estado.";"O uso de variaveis que modelam celulas de memoria.";"A dependencia da arquitetura de von Neumann.";"O uso de procedimentos para sumarizar sequencias de instrucoes.";"A ausencia de mudanca de estado."
"C1_Q06";"-1";"O que caracteriza um sistema de tipos fortemente tipado?";"d";"Permite coercao entre tipos nao relacionados.";"Permite o uso de variaveis sem declaracao de tipo.";"Permite que o tipo de uma variavel mude em tempo de execucao.";"E mais propenso a gerar erros ou nao compilar quando os tipos esperados nao correspondem.";"Utiliza apenas tipos primitivos.";"E mais propenso a gerar erros ou nao compilar quando os tipos esperados nao correspondem."
"C1_Q07";"-1";"A linguagem de programacao COBOL foi desenvolvida para qual area de aplicacao?";"a";"Aplicacoes de negocios.";"Inteligencia artificial.";"Calculo cientifico.";"Sistemas de tempo real.";"Programacao de sistemas.";"Aplicacoes de negocios."
"C1_Q08";"-1";"Qual a principal vantagem da compilacao em comparacao com a interpretacao de acordo com o material?";"b";"Portabilidade.";"Eficiencia.";"Facilidade de depuracao.";"Facilidade de prototipacao.";"Menor consumo de memoria.";"Eficiencia."
"C1_Q09";"-1";"O que e um valor de primeira classe?";"c";"Qualquer valor que pode ser armazenado em um array.";"Um valor de tipo primitivo.";"Um valor que pode ser passado como argumento retornado de uma funcao e atribuido a uma variavel sem restricoes.";"Um valor que so pode ser passado como argumento.";"Um valor que so pode ser retornado de uma funcao.";"Um valor que pode ser passado como argumento retornado de uma funcao e atribuido a uma variavel sem restricoes."
"C1_Q10";"-1";"O que a Forma de Backus Naur (BNF) e usada para definir?";"e";"A semantica de uma linguagem.";"O comportamento de um programa.";"A eficiencia de um programa.";"A portabilidade do codigo.";"A sintaxe de uma linguagem.";"A sintaxe de uma linguagem."
"C1_Q11";"-1";"Qual das seguintes linguagens e citada como sendo multiparadigma e combinando caracteristicas de imperativa orientada a objetos e funcional?";"a";"C++.";"Pascal.";"Prolog.";"Fortran.";"Haskell.";"C++."
"C1_Q12";"-1";"Qual o principal problema do uso irrestrito de `jumps` em programas imperativos?";"b";"Melhora a legibilidade do codigo.";"Gera comandos do tipo multiplas-entradas e multiplas-saidas (programas spaghetti).";"Evita que um comando seja executado abruptamente.";"Aumenta a reusabilidade do codigo.";"Torna o codigo mais conciso.";"Gera comandos do tipo multiplas-entradas e multiplas-saidas (programas spaghetti)."
"C1_Q13";"-1";"O que o polimorfismo de inclusao permite?";"c";"Que uma funcao atue sobre um numero finito de tipos nao relacionados.";"Uma conversao implicita de tipo.";"Que um tipo possa ter subtipos que herdam suas caracteristicas.";"Uma abstracao generica sobre multiplos tipos.";"A sobrecarga de operadores.";"Que um tipo possa ter subtipos que herdam suas caracteristicas."
"C1_Q14";"-1";"Qual tipo de polimorfismo ocorre quando um identificador e aplicavel a mais de uma operacao e o compilador distingue a operacao a ser chamada pelo tipo do parametro?";"a";"Sobrecarga.";"Coercao.";"Inclusao.";"Parametrico.";"Universal.";"Sobrecarga."
"C1_Q15";"-1";"Em uma linguagem com tipagem estatica o tipo das expressoes e determinado em qual momento?";"d";"Em tempo de execucao.";"Somente apos os testes do programa.";"No final da execucao.";"No tempo de compilacao.";"No momento da declaracao da variavel.";"No tempo de compilacao."
"C1_Q16";"-1";"No contexto da compilacao o que a fase de Analise Sintatica faz?";"e";"Traduz o codigo fonte para linguagem de maquina.";"Gera um programa executavel.";"Otimiza o codigo.";"Transforma o codigo em uma sequencia de tokens.";"Cria uma arvore abstrata a partir da gramatica da linguagem.";"Cria uma arvore abstrata a partir da gramatica da linguagem."
"C1_Q17";"-1";"De acordo com o material qual das seguintes afirmacoes sobre a linguagem C e verdadeira?";"b";"Ela possui um tipo booleano primitivo.";"Ela nao possui um tipo booleano primitivo e usa 0 como falso.";"Ela e uma linguagem puramente funcional.";"Ela e forte e dinamicamente tipada.";"Ela e um exemplo de polimorfismo parametrico.";"Ela nao possui um tipo booleano primitivo e usa 0 como falso."
"C1_Q18";"-1";"O que sao expressoes com efeitos colaterais?";"c";"Expressoes que sempre retornam um valor booleano.";"Expressoes que sao avaliadas apos um comando.";"Expressoes que quando avaliadas podem alterar o estado do programa.";"Expressoes que nao modificam o estado do programa.";"Expressoes usadas apenas para lacos de repeticao.";"Expressoes que quando avaliadas podem alterar o estado do programa."
"C1_Q19";"-1";"Qual a principal desvantagem da interpretacao?";"a";"Problemas com eficiencia e maior consumo de memoria.";"Falta de portabilidade.";"Dificuldade para prototipacao.";"Problemas com depuracao.";"A sintaxe ser complexa.";"Problemas com eficiencia e maior consumo de memoria."
"C1_Q20";"-1";"A linguagem Lisp e considerada precursora de qual paradigma de programacao?";"b";"Orientado a objetos.";"Funcional.";"Logico.";"Imperativo.";"Concorrente.";"Funcional."
"M7_Q01";7;"Qual e o conceito fundamental da programacao logica";"c";"Comando e estado";"Funcao e avaliacao";"Fatos regras e consultas";"Objeto e mensagem";"Recursao e iteracao";"Fatos regras e consultas"
"M7_Q02";7;"Em Prolog o que e um "fato"";"a";"Uma declaracao que e sempre verdadeira";"Uma pergunta que o usuario faz ao sistema";"Uma regra que define uma relacao";"Um comando para modificar um estado";"Uma variavel que armazena um valor";"Uma declaracao que e sempre verdadeira"
"M7_Q03";7;"Como e definido uma "regra" em Prolog";"b";"Por meio de uma consulta";"Por meio de uma cabeca e um corpo";"Apenas por meio de fatos";"Por meio de uma lista de variaveis";"Usando um operador de atribuicao";"Por meio de uma cabeca e um corpo"
"M7_Q04";7;"O que e a "unificacao" em Prolog";"e";"O processo de atribuicao de um valor fixo a uma variavel";"O processo de criacao de novos fatos";"O processo de execucao de uma consulta";"O processo de definicao de regras";"Um mecanismo para combinar termos e atribuir valores a variaveis";"Um mecanismo para combinar termos e atribuir valores a variaveis"
"M7_Q05";7;"Em Prolog o que significa a consulta "?- pai(X Y)"";"d";"Uma pergunta sobre o pai de X";"Uma declaracao de que X e o pai de Y";"Um comando para criar um novo pai";"Uma pergunta sobre quem e o pai de Y";"Uma consulta para verificar se X e pai de Y";"Uma pergunta sobre quem e o pai de Y"
"M7_Q06";7;"O que a programacao logica utiliza para inferir novas informacoes a partir de fatos e regras existentes";"c";"Comandos imperativos";"Funcoes de ordem superior";"Deducao e resolucao";"Casamento de padroes";"Heranca";"Deducao e resolucao"
"M7_Q07";7;"Qual e o nome do processo em que o Prolog busca solucoes alternativas quando uma regra falha";"b";"Unificacao";"Backtracking";"Recursao";"Iteracao";"Coercao";"Backtracking"
"M7_Q08";7;"O que o operador "is" faz em Prolog";"a";"Avalia uma expressao aritmetica";"Compara dois valores de forma logica";"Define um novo fato";"Realiza uma unificacao";"Atribui um valor a um atomo";"Avalia uma expressao aritmetica"
"M7_Q09";7;"Qual e a diferenca entre uma variavel e um atomo em Prolog";"e";"Variaveis comecam com letra maiuscula atomos com letra minuscula";"Atomos comecam com letra maiuscula variaveis com letra minuscula";"Variaveis sao usadas para fatos atomos para regras";"Variaveis podem ser numeros atomos nao";"Variaveis sao usadas em consultas atomos sao usados em fatos";"Variaveis comecam com letra maiuscula atomos com letra minuscula"
"M7_Q10";7;"Como sao representadas as listas em Prolog";"c";"Entre chaves {}";"Com parenteses ()";"Entre colchetes []";"Com aspas duplas "";"Entre barras verticais ||";"Entre colchetes []"
"M7_Q11";7;"O que o operador de "corte" (!) faz em Prolog";"a";"Forca o backtracking para encontrar todas as solucoes";"Evita que a unificacao ocorra";"Evita que o Prolog volte a escolher outra alternativa para as metas a sua esquerda";"Inicia um novo fato";"Define uma nova variavel";"Evita que o Prolog volte a escolher outra alternativa para as metas a sua esquerda"
"M7_Q12";7;"Qual e a relacao entre o operador de "corte" (!) e o backtracking";"b";"O corte forca o backtracking";"O corte evita o backtracking apos uma solucao ser encontrada";"O corte e usado apenas em consultas";"O corte e um comando de atribuicao";"Nao ha relacao entre eles";"O corte evita o backtracking apos uma solucao ser encontrada"
"M7_Q13";7;"Um programa em Prolog e composto por um banco de dados que contem o que";"d";"Apenas consultas";"Apenas variaveis";"Apenas funcoes";"Uma colecao de fatos e regras";"Comandos imperativos e funcoes";"Uma colecao de fatos e regras"
"M7_Q14";7;"Em Prolog o que e uma "variavel anonima" representada por um underline (_)";"e";"Uma variavel que pode ser modificada";"Uma variavel com nome";"Um erro de sintaxe";"Uma variavel global";"Uma variavel que nao precisa ser unificada";"Uma variavel que nao precisa ser unificada"
"M7_Q15";7;"Em programacao logica a ordem das regras e dos fatos pode influenciar o que";"c";"O tipo das variaveis";"A sintaxe da linguagem";"O desempenho e a ordem das solucoes encontradas";"O compilador";"A unificacao";"O desempenho e a ordem das solucoes encontradas"
"M7_Q16";7;"Qual dos seguintes e um exemplo de "regra" em Prolog";"a";"`avo(X Z) :- pai(X Y) pai(Y Z)`";"`pai(joao maria)`";"`?- pai(joao X)`";"`X is 5 + 3`";"`list(1 2 3)`";"`avo(X Z) :- pai(X Y) pai(Y Z)`"
"M7_Q17";7;"Qual e a principal aplicacao das linguagens de programacao logica";"d";"Desenvolvimento de jogos";"Programacao de sistemas embarcados";"Aplicativos web";"Inteligencia artificial e sistemas especialistas";"Processamento de planilhas";"Inteligencia artificial e sistemas especialistas"
"M7_Q18";7;"O que acontece se uma consulta em Prolog nao encontra nenhuma unificacao possivel";"c";"O programa continua a execucao";"O Prolog retorna um erro de sintaxe";"O Prolog retorna `false`";"O Prolog entra em um loop infinito";"O programa retorna o valor `true`";"O Prolog retorna `false`"
"M7_Q19";7;"Qual a principal diferenca entre a recursao e a iteracao em Prolog";"b";"Prolog usa apenas iteracao";"Prolog usa a recursao como sua principal forma de iteracao";"A iteracao e mais eficiente em Prolog";"A recursao nao e suportada em Prolog";"A iteracao e mais facil de ser escrita";"Prolog usa a recursao como sua principal forma de iteracao"
"M7_Q20";7;"Qual e o nome do programa que executa o codigo Prolog";"a";"Interpretador";"Compilador";"Tradutor";"Assembler";"Linker";"Interpretador"
id_questao;missao;pergunta;alternativa_Certa(apenas o char);texto alternativa_a;texto alternativa_b;texto alternativa_c;texto alternativa_d;texto alternativa_e;texto_alternativa_certa
"C3_Q01";-3;"O que e um "atomo" em Prolog";"b";"Uma variavel que pode ser unificada com qualquer coisa";"Um nome simbolico que comeca com letra minuscula";"Um comando que executa uma funcao";"Uma estrutura de dados mutavel";"Um valor booleano";"Um nome simbolico que comeca com letra minuscula"
"C3_Q02";-3;"Em Prolog qual a funcao da "unificacao"";"e";"Atribuir valores a atomos";"Executar um comando em sequencia";"Gerar um erro de sintaxe";"Definir um novo fato";"Combinar dois termos e atribuir valores a variaveis";"Combinar dois termos e atribuir valores a variaveis"
"C3_Q03";-3;"Qual o resultado da consulta `?- 2 + 3 is X` em Prolog";"c";"`X = 2 + 3`";"`false`";"`X = 5`";"Um erro de sintaxe";"`true`";"`X = 5`"
"C3_Q04";-3;"Qual o papel do "backtracking" em Prolog";"a";"Buscar solucoes alternativas quando uma meta falha";"Otimizar a execucao do codigo";"Realizar a soma de valores";"Permitir a criacao de listas";"Transformar um fato em uma regra";"Buscar solucoes alternativas quando uma meta falha"
"C3_Q05";-3;"O que e uma "regra" em Prolog";"d";"Uma declaracao que e sempre verdadeira";"Uma pergunta ao sistema";"Uma lista de argumentos";"Uma afirmacao condicional formada por uma cabeca e um corpo";"Uma operacao matematica";"Uma afirmacao condicional formada por uma cabeca e um corpo"
"C3_Q06";-3;"O que o operador de "corte" (!) faz";"b";"Forca a busca de todas as solucoes possiveis";"Impede que o Prolog volte para as metas a sua esquerda";"Inicia uma nova consulta";"Permite a atribuicao de valores";"Declara uma nova regra";"Impede que o Prolog volte para as metas a sua esquerda"
"C3_Q07";-3;"Como a recursao e utilizada para percorrer uma lista em Prolog";"c";"Atraves de um loop `for`";"Atraves do operador `is`";"Utilizando a cabeca e a cauda da lista";"Por meio de um fato";"Com o uso do operador `!`";"Utilizando a cabeca e a cauda da lista"
"C3_Q08";-3;"O que e uma "variavel anonima" em Prolog representada por `_`";"a";"Uma variavel que nao sera usada e nao precisa ser unificada";"Uma variavel que armazena um atomo";"Uma variavel que deve ser unificada";"Uma variavel de escopo global";"Uma variavel que armazena um valor booleano";"Uma variavel que nao sera usada e nao precisa ser unificada"
"C3_Q09";-3;"Em Prolog como se representa o operador de negacao por falha";"e";"Usando a palavra-chave `not`";"Usando o operador `!`";"Com o operador `is`";"Com a palavra-chave `fail`";"Usando a meta `\+`";"Usando a meta `\+`"
"C3_Q10";-3;"Qual e a principal diferenca entre um termo e um atomo em Prolog";"c";"Um termo pode ser uma variavel enquanto um atomo nao";"Um atomo pode ser uma variavel enquanto um termo nao";"Um atomo e um tipo de termo mas um termo pode ser mais complexo";"Nao ha diferenca entre eles";"Um termo comeca com letra minuscula e um atomo com maiuscula";"Um atomo e um tipo de termo mas um termo pode ser mais complexo"
"C3_Q11";-3;"O que significa uma consulta retornar `false` em Prolog";"b";"Que a consulta e semanticamente incorreta";"Que a meta nao pode ser provada com base nos fatos e regras";"Que ocorreu um erro de compilacao";"Que o codigo precisa de um `cut`";"Que a variavel foi unificada";"Que a meta nao pode ser provada com base nos fatos e regras"
"C3_Q12";-3;"Qual a principal desvantagem do uso excessivo do operador de "corte" em Prolog";"a";"Pode levar a solucoes incompletas ou incorretas";"Melhora a legibilidade do codigo";"Aumenta a flexibilidade do programa";"Melhora o desempenho da unificacao";"Permite o backtracking";"Pode levar a solucoes incompletas ou incorretas"
"C3_Q13";-3;"O que e uma "meta" em Prolog";"d";"Uma variavel com nome";"Um fato";"Uma regra";"Um objetivo a ser provado pelo interpretador";"Um tipo de dado";"Um objetivo a ser provado pelo interpretador"
"C3_Q14";-3;"Na logica de primeira ordem qual dos seguintes e um tipo de termo";"e";"Declaracao";"Comando";"Atribuicao";"Variavel global";"Atomos e variaveis";"Atomos e variaveis"
"C3_Q15";-3;"Para que serve o predicado `fail` em Prolog";"c";"Para declarar uma nova variavel";"Para forcar uma unificacao";"Para forcar o backtracking";"Para somar dois numeros";"Para iniciar uma nova regra";"Para forcar o backtracking"
"C3_Q16";-3;"Em Prolog qual e a diferenca entre `==` e `is`";"b";"`==` compara valores `is` realiza unificacao";"`==` compara termos `is` avalia expressoes aritmeticas";"`==` e para numeros `is` e para strings";"`==` e um operador logico `is` e de atribuicao";"Nao ha diferenca entre eles";"`==` compara termos `is` avalia expressoes aritmeticas"
"C3_Q17";-3;"Como se representa um comentario de uma unica linha em Prolog";"a";"`%`";"`//`";"`--`";"`#`";"`/* */`";"`%`"
"C3_Q18";-3;"Qual dos seguintes e um predicado de entrada e saida em Prolog";"d";"`sum`";"`head`";"`father`";"`write`";"`is`";"`write`"
"C3_Q19";-3;"O que e a "clausula de Horn"";"c";"Um tipo de dado";"Um comando de atribuicao";"Uma forma de representacao utilizada em programacao logica";"Uma regra sem corpo";"Um fato com varias cabecas";"Uma forma de representacao utilizada em programacao logica"
"C3_Q20";-3;"Qual a ordem de avaliacao de metas em uma regra Prolog";"b";"Da direita para a esquerda";"Da esquerda para a direita";"De forma aleatoria";"Do topo para o final da regra";"De baixo para cima";"Da esquerda para a direita"
